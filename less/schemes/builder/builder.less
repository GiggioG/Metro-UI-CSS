@import (once) "../../include/vars";
@import (once) "../../include/mixins";

.scheme-builder (
    @schemeBackgroundColor,
    @schemeTextColor,
    @schemeControlColor,
    @schemeControlFillColor,
    @schemeControlTextColor,
    @schemeBorderColor,
    @schemeDividerColor,
    @schemeFontFamily,
    @schemeFontSize
) {
    body {
        font-size: @schemeFontSize;
        font-family: @schemeFontFamily;
        color: @schemeTextColor;
        background-color: @schemeBackgroundColor;
    }

    // Inputs, switches
    input[type=text],
    input[type=password],
    input[type=tel],
    input[type=datetime-local],
    input[type=email],
    input[type=file],
    input[type=month],
    input[type=number],
    input[type=search],
    input[type=time],
    input[type=url],
    input[type=week],
    input[type=file],
    select, textarea, .file, .input, .textarea, .select {
        border-color: @schemeBorderColor !important;
        background-color: rgba(red(@schemeControlFillColor),green(@schemeControlFillColor),blue(@schemeControlFillColor), .2)!important;
        color: @schemeControlTextColor;

        &:focus, &.focused {
            box-shadow: 0 0 0 3px rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), 0.45);
        }
    }

    .input, .select, .textarea, .file {
        border-style: solid!important;

        .prepend, .button:hover {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .button {
            color: @schemeControlTextColor;
        }
    }

    .file {
        .button {
            background-color: @schemeControlFillColor;
        }
    }

    .select {
        &.dropdown-toggle {
            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        .d-menu, .v-menu {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
            box-shadow: none;
        }
    }

    .checkbox, .radio {
        .check {
            border-color: @schemeControlColor;

            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        input:indeterminate ~ .check {
            border-color: @schemeControlColor;
            &::before {
                background-color: @schemeControlFillColor;
            }
        }

        input:focus ~ .check {
            box-shadow: none;
        }

        input:checked ~ .check {
            border-color: @schemeControlColor;
        }

        input:disabled ~ .check, input:disabled ~ .check::before  {
            border-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;
        }
    }

    .checkbox {
        .check {
            background-color: rgba(red(@schemeControlFillColor),green(@schemeControlFillColor),blue(@schemeControlFillColor), .2)!important;
        }
    }

    .radio {
        .check {
            &::before {
                border-color: transparent;
                background-color: @schemeControlTextColor;
            }
        }
        input:disabled ~ .check, input:disabled ~ .check::before  {
            background-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;
        }
    }

    .switch {
        .check {
            border-color: @schemeControlColor;
            transition: @transition-base;

            &::after {
                outline-color: darken(@schemeControlColor, 10%);
                border-color: darken(@schemeControlColor, 10%);
                background-color: darken(@schemeControlColor, 10%);
            }
        }

        input:not(:disabled):checked ~ .check {
            background-color: @schemeControlFillColor;
            border-color: @schemeControlColor;
            &::after {
                outline-color: @schemeControlTextColor;
                border-color: @schemeControlTextColor;
                background-color: @schemeControlTextColor;
            }
        }

        input:disabled ~ .check {
            background-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;
            border-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;
            &::after {
                outline-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;;
                border-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;;
                background-color: rgba(red(@schemeControlColor), green(@schemeControlColor), blue(@schemeControlColor), .2)!important;;
            }
        }
    }

    // Accordion
    .accordion {
        .frame .heading {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .frame {
            margin: 0;
        }

        .frame + .frame {
            border-top: 1px darken(@schemeBorderColor, 10%) solid;
        }
    }

    // App bar
    .app-bar {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        .dropdown-toggle {
            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        .app-bar-menu, .app-bar-container {
            .d-menu {
                background-color: @schemeControlFillColor;
                color: @schemeControlTextColor;
            }

            .divider {
                background-color: @schemeDividerColor;
            }
        }
    }

    .generate-app-bar-media-options(@mediaBreakpointListMobileLength);
    .generate-app-bar-media-options(@name, @i: 1) when (@i <= @mediaBreakpointListMobileLength) {
        @m: extract(@mediaBreakpointListMobile, @i);

        @media screen and (min-width: @@m) {
            .app-bar {
                &.app-bar-expand-@{m} {
                    .app-bar-menu, .app-bar-container {
                        .d-menu {
                            box-shadow: none;
                            border: 1px solid @schemeBorderColor;
                        }
                    }
                }
            }
        }

        .generate-app-bar-media-options(@name, @i + 1);
    }

    // Border
    .bd-default {
        border-color: @schemeBorderColor!important;
    }

    // Buttons
    .button {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        &:active, &.focus, &:focus {
            .focus-show(@schemeControlFillColor);
        }
    }

    // Calendar
    .calendar {
        border-color: @schemeBorderColor;

        .calendar-header {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .day.today {
            background-color: rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), .5);
        }

        .day.selected {
            box-shadow: 0 0 0 1px rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), 1)!important;

            &::after {
                border-top-color: @schemeControlFillColor;
            }
        }

        .calendar-years > .years-list, .calendar-months > .months-list {
            li.active {
                background-color: @schemeControlFillColor;
                color: @schemeControlTextColor;
            }
        }
    }

    // Countdown
    .countdown {
        line-height: 1.5;

        .part {
            color: @schemeControlTextColor;
        }
    }

    // Date picker and time picker
    .wheel-picker {
        background-color: rgba(red(@schemeControlFillColor),green(@schemeControlFillColor),blue(@schemeControlFillColor), .2);
        color: @schemeControlTextColor;

        .date-wrapper, .time-wrapper {
            border-color: @schemeBorderColor;
        }

        .select-block {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;

            ul {
                border-color: @schemeBorderColor;
            }
        }

        .action-block {
            .button {
                color: @schemeControlTextColor;
            }
        }
    }

    // Dialog
    .dialog {
        background-color: @schemeBackgroundColor;
        color: @schemeControlTextColor;
        border: 1px solid @schemeBorderColor;

        .dialog-actions {
            border-top-color: @schemeBorderColor;
        }
    }
}