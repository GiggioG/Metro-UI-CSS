@import (once) "../../include/vars";
@import (once) "../../include/mixins";

.scheme-builder (
    @schemeBackgroundColor,
    @schemeTextColor,
    @schemeControlColor,
    @schemeControlFillColor,
    @schemeControlTextColor,
    @schemeBorderColor,
    @schemeDividerColor,
    @schemeFontFamily,
    @schemeFontSize
) {

    @blendBackground: rgba(red(@schemeBackgroundColor),green(@schemeBackgroundColor),blue(@schemeBackgroundColor), .2);
    @blendFill: rgba(red(@schemeControlFillColor),green(@schemeControlFillColor),blue(@schemeControlFillColor), .2);
    @blendControl: rgba(red(@schemeControlColor),green(@schemeControlColor),blue(@schemeControlColor), .2);
    @boxShadow: 0 0 0 3px rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), 0.45);

    body {
        font-size: @schemeFontSize;
        font-family: @schemeFontFamily;
        color: @schemeTextColor;
        background-color: @schemeBackgroundColor;
    }

    .dropdown-toggle {
        &::before {
            border-color: @schemeControlTextColor;
        }
    }

    .display4, .display3, .display2, .display1 {
        color: lighten(@schemeTextColor, 46%);
    }

    .disabled {
        color: darken(@schemeControlTextColor, 30%)!important;
    }

    // Border
    .bd-default {
        border-color: @schemeBorderColor!important;
    }

    .bg-scheme {background-color: @schemeBackgroundColor!important;}
    .bg-control {background-color: @schemeControlFillColor!important;}
    .bg-control-bland {background-color: @blendFill!important;}
    .fg-scheme {color: @schemeTextColor!important;}
    .fg-control {color: @schemeControlTextColor!important;}

    // Inputs, switches
    input[type=text],
    input[type=password],
    input[type=tel],
    input[type=datetime-local],
    input[type=email],
    input[type=file],
    input[type=month],
    input[type=number],
    input[type=search],
    input[type=time],
    input[type=url],
    input[type=week],
    input[type=file],
    select, textarea, .file, .input, .textarea, .select {
        border-color: @schemeBorderColor !important;
        background-color: @blendFill!important;
        color: @schemeControlTextColor;

        &:focus, &.focused {
            box-shadow: @boxShadow;
        }
    }

    .input, .select, .textarea, .file {
        border-style: solid!important;

        .prepend, .button:hover {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .button {
            color: @schemeControlTextColor;
        }

        input, select, textarea {
            box-shadow: none!important;
        }
    }

    .file {
        .button {
            background-color: @schemeControlFillColor;
        }
    }

    .select {
        &.dropdown-toggle {
            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        .d-menu, .v-menu {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
            box-shadow: none;
        }
    }

    .checkbox, .radio {
        .check {
            border-color: @schemeControlColor;

            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        input:indeterminate ~ .check {
            border-color: @schemeControlColor;
            &::before {
                background-color: @schemeControlColor;
            }
        }

        input:focus ~ .check {
            box-shadow: none;
        }

        input:checked ~ .check {
            border-color: @schemeControlColor;
        }

        input:disabled ~ .check, input:disabled ~ .check::before  {
            border-color: @blendControl!important;
        }
    }

    .checkbox {
        .check {
            background-color: @blendFill!important;
        }
    }

    .radio {
        .check {
            &::before {
                border-color: transparent;
                background-color: @schemeControlTextColor;
            }
        }
        input:disabled ~ .check, input:disabled ~ .check::before  {
            background-color: @blendControl!important;
        }
    }

    .switch {
        .check {
            border-color: @schemeControlColor;
            transition: @transition-base;

            &::after {
                outline-color: darken(@schemeControlColor, 10%);
                border-color: darken(@schemeControlColor, 10%);
                background-color: darken(@schemeControlColor, 10%);
            }
        }

        input:not(:disabled):checked ~ .check {
            background-color: @schemeControlFillColor;
            border-color: @schemeControlColor;
            &::after {
                outline-color: @schemeControlTextColor;
                border-color: @schemeControlTextColor;
                background-color: @schemeControlTextColor;
            }
        }

        input:disabled ~ .check {
            background-color: @blendControl!important;
            border-color: @blendControl!important;
            &::after {
                outline-color: @blendControl!important;;
                border-color: @blendControl!important;;
                background-color: @blendControl!important;;
            }
        }
    }

    // Accordion
    .accordion {
        .frame .heading {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .frame {
            margin: 0;
        }

        .frame + .frame {
            border-top: 1px darken(@schemeBorderColor, 10%) solid;
        }
    }

    // App bar
    .app-bar {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        .dropdown-toggle {
            &::before {
                border-color: @schemeControlTextColor;
            }
        }

        .app-bar-menu, .app-bar-container {
            .d-menu {
                background-color: @schemeControlFillColor;
                color: @schemeControlTextColor;
            }

            .divider {
                background-color: @schemeDividerColor;
            }
        }
    }

    .generate-app-bar-media-options(@mediaBreakpointListMobileLength);
    .generate-app-bar-media-options(@name, @i: 1) when (@i <= @mediaBreakpointListMobileLength) {
        @m: extract(@mediaBreakpointListMobile, @i);

        @media screen and (min-width: @@m) {
            .app-bar {
                &.app-bar-expand-@{m} {
                    .app-bar-menu, .app-bar-container {
                        .d-menu {
                            box-shadow: none;
                            border: 1px solid @schemeBorderColor;
                        }
                    }
                }
            }
        }

        .generate-app-bar-media-options(@name, @i + 1);
    }

    // Buttons
    .button {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        &:active, &.focus, &:focus {
            .focus-show(@schemeControlFillColor);
        }
    }

    .breadcrumbs {
        background-color: @schemeBackgroundColor;
        color: @schemeControlTextColor;
        border: 1px solid @schemeBorderColor;

        .page-item {
            &::before, &::after {
                background-color: @schemeControlTextColor!important;
            }
        }
        .page-link:hover {
            color: darken(@schemeControlTextColor, 10%);
        }
    }

    .pagination {
        .page-item:not(.no-link) {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
            border: 1px darken(@schemeControlFillColor, 10%) solid;

            .page-link, .service {
                &:hover {
                    background-color: @hoverBackground!important;
                }
            }
        }

        &.no-gap {
            .page-item {
                border: none;
                margin: 0;
            }
        }

        .page-item {
            &.active {
                background-color: lighten(@schemeControlFillColor, 10%);
            }
        }

        .no-link {
            background-color: @transparent;
            color: @schemeControlTextColor;
        }
    }

    // Calendar
    .calendar {
        border-color: @schemeBorderColor;

        .calendar-header {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;
        }

        .day.today {
            background-color: rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), .5);
        }

        .day.selected {
            box-shadow: 0 0 0 1px rgba(red(@schemeControlFillColor), green(@schemeControlFillColor), blue(@schemeControlFillColor), 1)!important;

            &::after {
                border-top-color: @schemeControlFillColor;
            }
        }

        .calendar-years > .years-list, .calendar-months > .months-list {
            li.active {
                background-color: @schemeControlFillColor;
                color: @schemeControlTextColor;
            }
        }
    }

    // Countdown
    .countdown {
        line-height: 1.5;

        .part {
            color: @schemeControlTextColor;
        }
    }

    // Date picker and time picker
    .wheel-picker {
        background-color: @blendFill;
        color: @schemeControlTextColor;

        .date-wrapper, .time-wrapper {
            border-color: @schemeBorderColor;
        }

        .select-block {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;

            ul {
                border-color: @schemeBorderColor;
            }
        }

        .action-block {
            .button {
                color: @schemeControlTextColor;
            }
        }
    }

    // Dialog
    .dialog {
        background-color: @schemeBackgroundColor;
        color: @schemeControlTextColor;
        border: 1px solid @schemeBorderColor;

        .dialog-actions {
            border-top-color: @schemeBorderColor;
        }
    }

    // Hints

    // Keypad
    .keypad {
        .keys {
            background-color: @schemeControlFillColor;
            border-color: @schemeBorderColor;
            color: @schemeControlTextColor;
        }
        .key {
            &.service-key {
                background-color: darken(@schemeControlFillColor, 10%);
            }
        }
    }

    // Listview
    .listview {
        background-color: lighten(@schemeBackgroundColor, 1%);
        color: @schemeControlTextColor;

        .node {
            &:hover {
                background-color: @schemeControlFillColor;
                color: @schemeControlTextColor;
            }
            &.current-select {
                background-color: @schemeControlFillColor;
                border-color: @schemeBorderColor!important;
            }
        }

        .node-group {
            .node-toggle {
                &::before {
                    border-color: @schemeControlTextColor;
                }
            }
        }

        &.view-content {
            .node + .node {
                border-top-color: @schemeBorderColor;
            }
        }
    }

    // Master
    .master {
        background-color: @schemeBackgroundColor;
        color: @schemeTextColor;

        .controls {
            .next, .prev {
                color: @schemeControlTextColor;
            }
        }

        .pages {
            border-color: @schemeBorderColor;
        }
    }

    // Menu
    .h-menu {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        & > li > a {
            &.dropdown-toggle {
                &::before {
                    border-color: @schemeControlTextColor;
                }
            }
        }

        .disabled {
            color: darken(@schemeControlTextColor, 30%)!important;
        }
    }

    .d-menu, .v-menu {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        border: 1px solid @schemeBorderColor;
        box-shadow: none;

        li {
            .dropdown-toggle {
                &::before {
                    border-color: @schemeControlTextColor;
                }
            }

            &:hover {
                background-color: @hoverBackground;
                color: @schemeControlTextColor;

                .dropdown-toggle {
                    &::before {
                        border-color: @schemeControlTextColor;
                    }
                }
            }
        }

        .divider {
            background-color: @schemeDividerColor;
        }

        .menu-title {
            background-color: darken(@schemeControlFillColor, 2%);
        }
    }

    .v-menu {
        .v-menu {
            border: none!important;
        }
    }

    .t-menu {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        box-shadow: none;

        li a {
            border-color: @schemeBorderColor!important;
        }

        .dropdown-toggle {
            &::after {
                border-color: transparent transparent @schemeControlTextColor transparent;
            }
        }
    }

    // navview
    .navview {
        .navview-pane {
            background-color: @schemeControlFillColor;
            color: @schemeControlTextColor;

            .pull-button, .holder, .navview-menu li a {
                &:hover {
                    background-color: @hoverBackground;
                }
                &:active, &:focus {
                    background-color: darken(@schemeControlFillColor, 4%);
                }
                &:focus {
                    border: 2px solid @hoverBackground;
                }
            }

            .dropdown-toggle {
                &::after {
                    border-color: transparent transparent @schemeControlTextColor transparent;
                }
            }
        }

        .navview-content {
            background-color: @schemeBackgroundColor;
            color: @schemeTextColor;
        }
    }

    // Notify
    .notify {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        border: 1px solid @schemeBorderColor;
    }

    // Panel
    .panel {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        border-color: @schemeBorderColor!important;

        .panel-title {
            border-bottom-color: @schemeBorderColor;

            .dropdown-toggle {
                border-left-color: @schemeBorderColor;
                &::before {
                    border-color: @schemeControlTextColor;
                }
            }

            .icon {
                border-right-color: @schemeBorderColor;
            }
        }
    }

    // Popovers
    .popover {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        border-color: @schemeBorderColor;
    }

    // Rating

    @ratingOff: darken(@schemeControlTextColor, 50%);
    @ratingOn: @schemeControlTextColor;

    .rating {
        .stars {
            li {
                color: @ratingOff;

                &.on {
                    color: @ratingOn;
                }
            }
        }
    }

    .rating:not(.static) .stars {
        &:hover {
            li {
                color: @ratingOn;
            }
        }

        li:hover ~ li {
            color: @ratingOff!important;
        }
    }

    // Ribbon menu
    .ribbon-menu {
        .tabs-holder {
            border-bottom-color: @schemeBorderColor;

            li {
                background-color: @blendControl;
                color: @schemeControlTextColor;
                border-bottom-color: @blendControl;

                &:hover {
                    border-left-color: @schemeBorderColor;
                    border-right-color: @schemeBorderColor;
                }
            }

            .active {
                background-color: @schemeControlFillColor;
                border: 1px solid @schemeBorderColor;
                border-bottom-color: transparent;
            }
        }

        .content-holder {
            border-left: 1px solid @schemeBorderColor;
            border-right: 1px solid @schemeBorderColor;
            background-color: @schemeControlFillColor;

            .section {
                border-bottom: 1px solid @schemeBorderColor;
            }

            .group {
                .title {
                    border-top-color: @schemeBorderColor;
                }
                .group-divider {
                    background-color: @schemeBorderColor;
                }
            }
            .group + .group {
                border-left-color: @schemeBorderColor;
            }
        }
    }

    .ribbon-button, .ribbon-icon-button, .ribbon-tool-button {
        &:hover {
            border-color: @schemeBorderColor;
            background-color: @blendControl;
        }
    }

    .ribbon-icon-button, .ribbon-tool-button {
        &.dropdown-toggle {
            &::after {
                border-color: transparent transparent @schemeControlTextColor transparent;
            }
        }
    }

    .ribbon-split-button {
        &:hover {
            border-color: @schemeBorderColor;

            .ribbon-split {
                border-color: @schemeBorderColor;
            }
        }

        .ribbon-main, .ribbon-split {
            color: @schemeControlTextColor;
            &:hover {
                background-color: @blendControl;
            }

            &::after {
                border-color: transparent transparent @schemeBorderColor transparent;
            }
        }
        .ribbon-split {
            &.dropdown-toggle {
                &::after {
                    border-color: transparent transparent @schemeControlTextColor transparent;
                }
            }
        }
    }

    .ribbon-button, .ribbon-icon-button, .ribbon-tool-button, .ribbon-split-button {
        color: @schemeControlTextColor;
    }

    .ribbon-dropdown {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;
        border-color: @schemeBorderColor;
        box-shadow: none;

        li {
            &:hover {
                border-color: @schemeBorderColor;
                background-color: @blendControl;
            }
        }

        a {
            border-left-color: @schemeBorderColor;
        }

        .divider {
            background-color: @schemeBorderColor;
        }

        .checked, .checked-one {
            &::before {
                border-color: @schemeControlTextColor;
            }
        }
        .checked {
            &::after {
                border-color: @schemeControlTextColor;
                background-color: @blendControl;
            }
        }
        .checked-one {
            &::before {
                background-color: @schemeControlTextColor;
            }

        }
    }

    .ribbon-toggle-group {
        border-color: @schemeBorderColor;
        background-color: @blendFill;
    }

    .ribbon-button, .ribbon-tool-button, .ribbon-split, .ribbon-main, .ribbon-icon-button {
        &:active, &.active {
            border-color: @schemeBorderColor;
            background-color: @blendControl!important;
        }
    }

    .ribbon-menu {
        .active-container {
            .ribbon-button, .ribbon-tool-button, .ribbon-icon-button {
                border-color: @schemeBorderColor;
                background-color: @blendControl!important;
            }
        }
    }

    // Sidenav
    .sidenav-simple, .sidenav-counter {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        .active, li.active:hover {
            background-color: @blendControl;
            color: @schemeControlTextColor;
        }
    }

    .sidenav-m3 {
        background-color: @schemeControlFillColor;
        color: @schemeControlTextColor;

        a {
            background-color: @schemeControlFillColor;

            &:hover {
                background-color: darken(@schemeControlFillColor, 2%);
            }
        }

        li + li {
            border-top-color: @schemeBorderColor;
        }

        .d-menu {
            border-color: @schemeControlFillColor;
            margin-bottom: 4px;
            li {
                border-top-color: @schemeBorderColor;
            }
        }
    }

    // Window
    .window {
        border-color: @schemeBorderColor;
        background-color: @schemeBackgroundColor;
        color: @schemeControlTextColor;

        .window-caption {
            background-color: @schemeControlFillColor;
            color: @schemeTextColor;
        }
    }
}